<?xml version="1.0"?>
<robot name="roscontrol" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="WheelSep" value="0.26"/>
    <xacro:property name="WheelRad" value="0.055"/>
    <xacro:property name="WheelLen" value="0.1"/>
    <xacro:property name="WheelPoss" value="0.15"/>

    <material name="blue">
        <color rgba="0 0 0.8 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <mass value="${mass}" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
    </xacro:macro>

    <link name="base_link">
        <visual>
            <geometry>
                <box size="0.8 0.4 0.2"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <box size="0.8 0.4 0.2"/>
            </geometry>
        </collision>
        <xacro:default_inertial mass="10"/>
    </link>
    <gazebo reference="base_link">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- wheels -->
    <xacro:macro name="wheels" params = "prefex reflect">
        <!-- back wheels -->
        <link name="${prefex}_back_wheel">
            <visual>
                <origin rpy="1.57075 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
            </collision>
            <xacro:default_inertial mass="1"/>
        </link>
        <joint name="${prefex}_back_wheel_joint" type="continuous">
            <axis xyz="0 1 0" rpy="0 0 0" />
            <parent link="base_link"/>
            <child link="${prefex}_back_wheel"/>
            <origin rpy="0 0 0" xyz="-${WheelPoss*2} ${reflect*WheelSep/2} -0.13"/>
        </joint>
        <gazebo reference="${prefex}_back_wheel">
            <material>Gazebo/Black</material>
        </gazebo>

        <link name="${prefex}_back_M_wheel">
            <visual>
                <origin rpy="1.57075 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
            </collision>
            <xacro:default_inertial mass="1"/>
        </link>
        <joint name="${prefex}_back_M_wheel_joint" type="continuous">
            <axis xyz="0 1 0" rpy="0 0 0" />            
            <parent link="base_link"/>
            <child link="${prefex}_back_M_wheel"/>
            <origin rpy="0 0 0" xyz="-${WheelPoss} ${reflect*WheelSep/2} -0.13"/>
        </joint>
        <gazebo reference="${prefex}_back_M_wheel">
            <material>Gazebo/Black</material>
        </gazebo>

        <!-- front wheels -->
        <link name="${prefex}_front_M_wheel">
            <visual>
                <origin rpy="1.57075 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
            </collision>
            <xacro:default_inertial mass="1"/>
        </link>
        <joint name="${prefex}_front_M_wheel_joint" type="continuous">
            <axis xyz="0 1 0" rpy="0 0 0" />
            <parent link="base_link"/>
            <child link="${prefex}_front_M_wheel"/>
            <origin rpy="0 0 0" xyz="${WheelPoss} ${reflect*WheelSep/2} -0.13"/>
        </joint>
        <gazebo reference="${prefex}_front_M_wheel">
            <material>Gazebo/Black</material>
        </gazebo>

        <link name="${prefex}_front_wheel">
            <visual>
                <origin rpy="1.57075 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${WheelLen}" radius="${WheelRad}"/>
                </geometry>
            </collision>
            <xacro:default_inertial mass="1"/>
        </link>
        <joint name="${prefex}_front_wheel_joint" type="continuous">
            <axis xyz="0 1 0" rpy="0 0 0" />
            <parent link="base_link"/>
            <child link="${prefex}_front_wheel"/>
            <origin rpy="0 0 0" xyz="${WheelPoss*2} ${reflect*WheelSep/2} -0.13"/>
        </joint>
        <gazebo reference="${prefex}_front_wheel">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <xacro:wheels prefex = "right" reflect = "-1"/>
    <xacro:wheels prefex = "left" reflect = "1"/>

    <!-- Gazebo plugin for ROS Control -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive_multiwheel.so">

            <!-- Plugin update rate in Hz -->
            <updateRate>50</updateRate>

            <!-- Name of left joint, defaults to `left_joint` -->
            <leftJoints>left_back_wheel left_back_M_wheel left_front_M_wheel left_front_wheel</leftJoints>

            <!-- Name of right joint, defaults to `right_joint` -->
            <rightJoints>right_back_wheel right_back_M_wheel right_front_M_wheel right_front_wheel</rightJoints>

            <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
            <wheelSeparation>${WheelSep}</wheelSeparation>

            <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
            <wheelDiameter>${WheelRad*2}</wheelDiameter>

            <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <wheelAcceleration>1.0</wheelAcceleration>

            <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
            <wheelTorque>20</wheelTorque>

            <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
            <commandTopic>/diff_drive_controller/cmd_vel</commandTopic>

            <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
            <odometryTopic>odom</odometryTopic>

            <!-- Odometry frame, defaults to `odom` -->
            <odometryFrame>odom</odometryFrame>

            <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
            <robotBaseFrame>base_link</robotBaseFrame>

            <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
            <odometrySource>1</odometrySource>

            <!-- Set to true to publish transforms for the wheel links, defaults to false -->
            <publishWheelTF>true</publishWheelTF>

            <!-- Set to true to publish transforms for the odometry, defaults to true -->
            <publishOdom>true</publishOdom>

            <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
            <publishWheelJointState>true</publishWheelJointState>

            <!-- Set to true to swap right and left wheels, defaults to true -->
            <legacyMode>false</legacyMode>
        </plugin>
    </gazebo>
</robot>